package big_O_1;

public class big_O_ex8 {
	/*
	 * 여러 개의 문자열로 구성된 배열이 주어졌을 때 각각의 문자열을 먼저 정렬하고 그 다음에
	 * 전체 문자열을 사전순으로 다시 정렬하는 알고리즘이 있다고 가정하자. 이 알고리즘의 수행 시간은 어떻게 되겠는가?
	 * 
	 */
}







/*
분석을 할 때 헷갈리는 것을 방지하기 위해서 N보다는 새로운 변수를 정의해서 사용 하는 것이 좋다.

틀리기 쉬운 분석) 각 문자열을 정렬하는데 O(NlogN)이 소요되므로 모든 문자열을 정렬하는데 O(N*NlogN)이 소요될 것 이다.
            그 다음 전체 문자열을 다시 사전순으로 정렬해야 하므로 O(NlogN)이 추가적으로 필요할 것이다. 따라서 전체 수행시간은
     O(N^2logN+NlogN)이 되고, 이를 정리하면 O(N^2logN)이 될 것이다.
     
     => 문자열의 길이를 나타낼 때와 배열의 길이를 나타낼 때 모두 N을 사용했다.

정답 )
 - 가장 길이가 긴 문자열의 길이를 s라 하자.
 - 배열의 길이를 a라 하자.
 - 각 문자열을 정렬하는데 O(slogs)가 소요된다.
 - a개의 문자열 모두를 정렬해야 하므로, 총 O(a*slogs)가 소요된다.
 - 이제 전체 문자열을 사전순으로 정렬해야 한다. 총 a개의 문자열이 있으므로 이들을
 정렬하는 데 O(aloga)가 소요될 거라 생각할 수도 있다. 하지만 문자열을 비교하는 시간 또한
 고려해야 한다. 문자열 두 개를 비교하는데 O(s)의 시간이 소요되고, 총 O(aloga)번을 비교해야 하므로 결론적으로 O(a*sloga)가 소요된다.
 모두 더해주면 전체 시간 복잡도는 O(a*s(loga+logs))가 된다.(더 줄일 수 있는 방법은 없다.)


*/